name: CI Deployment

on:
  pull_request:
    types:
      - closed
    branches:
      - master
      - stage
      - dev

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        description: Select the environment
        required: true
        type: environment
      branch_override:
        description: Enter branch override
        required: false

# env:
#   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#   PAT: ${{ secrets.PAT }}

jobs:

  build:
    runs-on: ubuntu-latest
    outputs:
      BRANCH_NAME: ${{ steps.branch.outputs.BRANCH_NAME }}
      ENVIRONMENT_NAME: ${{ steps.branch.outputs.ENVIRONMENT_NAME }}
      
    steps:
      - name: Set branch for workflow_dispatch event
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          if [ "${{ inputs.branch_override }}" != "" ]; then
            echo "BRANCH_NAME=${{ inputs.branch_override }}" >> $GITHUB_ENV
          elif [ "${{ inputs.environment }}" == "l1" ]; then
            echo "BRANCH_NAME=master" >> $GITHUB_ENV
          elif [ "${{ inputs.environment }}" == "q2" ]; then
            echo "BRANCH_NAME=master" >> $GITHUB_ENV
          elif [ "${{ inputs.environment }}" == "q1" ]; then
            echo "BRANCH_NAME=stage" >> $GITHUB_ENV
          elif [ "${{ inputs.environment }}" == "d1" ]; then
            echo "BRANCH_NAME=dev" >> $GITHUB_ENV
          else
            echo "Error: Invalid environment"
            exit 1
          fi
          
      - name: Set branch for pull_request event
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "BRANCH_NAME=${{ github.base_branch }}" >> $GITHUB_ENV
          
      - name: Set environment for workflow_dispatch event
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "ENVIRONMENT_NAME=${{ inputs.environment }}" >> $GITHUB_ENV
      
      - name: Set environment for pull_request event
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          if [ "${{ github.base_branch }}" == "master" ]; then
            echo "ENVIRONMENT_NAME=q2" >> $GITHUB_ENV
          elif [ "${{ github.base_branch }}" == "stage" ]; then
            echo "ENVIRONMENT_NAME=q1" >> $GITHUB_ENV
          elif [ "${{ github.base_branch }}" == "dev" ]; then
            echo "ENVIRONMENT_NAME=d1" >> $GITHUB_ENV
          else
            echo "Error: Invalid base_branch"
            exit 1
          fi
      
      - name: Output branch and environment
        id: branch
        run: |
          echo "BRANCH_NAME=${{ env.BRANCH_NAME }}" >> $GITHUB_OUTPUT;
          echo "ENVIRONMENT_NAME=${{ env.ENVIRONMENT_NAME }}" >> $GITHUB_OUTPUT;

      - name: Get commit hash
        id: branch-info
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/branches/${{ env.BRANCH_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: "echo branch-info: '${{ steps.branch-info.outputs.data }}'"

      - name: Print commit hash
        run: |
          COMMIT_HASH=$(echo "${{ fromJson(steps.branch-info.outputs.data).commit.sha }}")
          echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV

      - uses: actions/checkout@v3
        with:
          ref: refs/heads/${{ env.BRANCH_NAME }}
          #${{ env.COMMIT_HASH }}

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
  
  deployment:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: ${{ needs.build.outputs.ENVIRONMENT_NAME }}
      url: https://example.com/environments/${{ needs.build.outputs.ENVIRONMENT_NAME }}
    
    steps:
      - name: Set branch and environment
        run: |
          echo "BRANCH_NAME=${{ needs.build.outputs.BRANCH_NAME }}" >> $GITHUB_ENV;
          echo "ENVIRONMENT_NAME=${{ needs.build.outputs.ENVIRONMENT_NAME }}" >> $GITHUB_ENV;

      - name: Get commit hash
        id: branch-info
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/branches/${{ env.BRANCH_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Print commit hash
        run: |
          COMMIT_HASH=$(echo "${{ fromJson(steps.branch-info.outputs.data).commit.sha }}")
          echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV
          
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: refs/heads/${{ env.BRANCH_NAME }}
          #${{ env.COMMIT_HASH }}

      - name: Deploy to environment
        run: |
          echo "Deploying branch ${{ env.BRANCH_NAME }} to ${{ env.ENVIRONMENT_NAME }} environment..."



  

  
